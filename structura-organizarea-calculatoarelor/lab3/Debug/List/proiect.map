################################################################################
#                                                                              #
#      IAR Universal Linker V6.4.4.85                                          #
#                                                                              #
#           Link time     =  19/Oct/2020  22:23:07                             #
#           Target CPU    =  A90                                               #
#           List file     =  C:\Users\third\Desktop\structura-organizarea-calc #
#                            ulatoarelor\lab3\Debug\List\proiect.map           #
#           Output file 1 =  C:\Users\third\Desktop\structura-organizarea-calc #
#                            ulatoarelor\lab3\Debug\Exe\proiect.d90            #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  C:\Users\third\Desktop\structura-organizarea-calc #
#                            ulatoarelor\lab3\Debug\Obj\main.r90               #
#                            C:\Users\third\Desktop\structura-organizarea-calc #
#                            ulatoarelor\lab3\Debug\Obj\usart.r90              #
#                            -o                                                #
#                            C:\Users\third\Desktop\structura-organizarea-calc #
#                            ulatoarelor\lab3\Debug\Exe\proiect.d90            #
#                            -l                                                #
#                            C:\Users\third\Desktop\structura-organizarea-calc #
#                            ulatoarelor\lab3\Debug\List\proiect.map           #
#                            -xms                                              #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 7.4\avr\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 7.4\avr\src\template\cfgm16.xcl"            #
#                            (-D_..X_INTVEC_SIZE=54 -D_..X_FLASH_NEND=3FFF     #
#                            -D_..X_FLASH_END=3FFF -D_..X_SRAM_BASE=60         #
#                            -D_..X_SRAM_TBASE=_..X_SRAM_BASE                  #
#                            -D_..X_SRAM_TSIZE=(100-_..X_SRAM_BASE)            #
#                            -D_..X_SRAM_END=45F                               #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_END                #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_END                 #
#                            -D_..X_EXT_ROM_SIZE=0                             #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_END                  #
#                            -D_..X_EXT_NV_SIZE=0 -D_..X_EEPROM_END=1FF        #
#                            -D_..X_EEPROM_START=0) -D_..X_HEAP_SIZE=10        #
#                            -D_..X_TINY_HEAP_SIZE=0 -D_..X_NEAR_HEAP_SIZE=0   #
#                            -D_..X_FAR_HEAP_SIZE=0 -D_..X_HUGE_HEAP_SIZE=0    #
#                            -D_..X_CSTACK_SIZE=20 -D_..X_RSTACK_SIZE=20       #
#                            -D_..X_FLASH_CODE_END=_..X_FLASH_END -f           #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 7.4\avr\src\template\cfg3soim.xcl"          #
#                            (-ca90 -w29                                       #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -P(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE- #
#                            _..X_CSTACK_END                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_CSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_CSTACK_END=_..X_SRAM_END                   #
#                            -D_..X_RSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_RSTACK_END=_..X_SRAM_END -rt -s            #
#                            __program_start                                   #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 7.4\avr\LIB\CLIB\cl3s-ec_mul-sf.r90"        #
#                            -e_large_write=_formatted_write                   #
#                            -e_large_read=_formatted_read                     #
#                                                                              #
#                           Copyright (C) 1987-2016 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      000000EE  Relocatable, from module : ?C_STARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __64bit_doubles = disabled
  __SystemLibrary = CLib
  __cpu           = 3
  __cpu_name      = ATmega16
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 3
  __tiny_avr      = false
  __vtable_memory = __nearflash

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_RSTACK_END         0000045F 
           _..X_RSTACK_BASE        00000060 
           _..X_CSTACK_END         0000045F 
           _..X_CSTACK_BASE        00000060 
           _..X_FLASH_BASE         00000054 
           _..X_FLASH_CODE_END     00003FFF 
           _..X_RSTACK_SIZE        00000020 
           _..X_CSTACK_SIZE        00000020 
           _..X_HUGE_HEAP_SIZE     00000000 
           _..X_FAR_HEAP_SIZE      00000000 
           _..X_NEAR_HEAP_SIZE     00000000 
           _..X_TINY_HEAP_SIZE     00000000 
           _..X_HEAP_SIZE          00000010 
           _..X_EEPROM_START       00000000 
           _..X_EEPROM_END         000001FF 
           _..X_EXT_NV_SIZE        00000000 
           _..X_EXT_NV_BASE        0000045F 
           _..X_EXT_ROM_SIZE       00000000 
           _..X_EXT_ROM_BASE       0000045F 
           _..X_EXT_SRAM_SIZE      00000000 
           _..X_EXT_SRAM_BASE      0000045F 
           _..X_SRAM_END           0000045F 
           _..X_SRAM_TSIZE         000000A0 
           _..X_SRAM_TBASE         00000060 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00003FFF 
           _..X_FLASH_NEND         00003FFF 
           _..X_INTVEC_SIZE        00000054 
    *************************************************************************

  FILE NAME : C:\Users\third\Desktop\structura-organizarea-calculatoarelor\lab3\Debug\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 000000AD - 000000BB (0xf bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           data_send               000000AD        USART_transmit (usart)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000054 - 000000A1 (0x4e bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000054        ?cstartup_call_main (?C_STARTUP)
               calls direct
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001C, align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001D, align: 0
  Segment part 2. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 0000001D 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001E, align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                0000001E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                0000001F 
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000018C - 00000198 (0xd bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000180 - 00000185 (0x6 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   00000180 
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000186 - 0000018B (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   USART_transmit::i (usart)
                                                   data_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   00000186 
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000000A0 - 000000AC (0xd bytes), align: 0
  Segment part 7.             Intra module refs:   main

    *************************************************************************

  FILE NAME : C:\Users\third\Desktop\structura-organizarea-calculatoarelor\lab3\Debug\Obj\usart.r90
  PROGRAM MODULE, NAME : usart

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000040 - 00000040 (0x1 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   USART_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRH                00000040 
           LOCAL                   ADDRESS         
           =====                   =======         
           UBRRH                   00000040 
           UCSRC                   00000040 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000031 - 00000031 (0x1 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   USART_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 00000031 
           LOCAL                   ADDRESS         
           =====                   =======         
           DDRD                    00000031 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002C - 0000002C (0x1 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   USART_Receive
                                                   USART_transmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR                  0000002C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UDR                     0000002C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002B - 0000002B (0x1 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   USART_Receive
                                                   USART_transmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRA                0000002B 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSRA                   0000002B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002A - 0000002A (0x1 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   USART_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRB                0000002A 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSRB                   0000002A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000029 - 00000029 (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   USART_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRL                00000029 
           LOCAL                   ADDRESS         
           =====                   =======         
           UBRRL                   00000029 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000A2 - 000000B7 (0x16 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USART_initialize        000000A2        main (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000B8 - 000000DF (0x28 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USART_transmit          000000B8        main (main)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000BC - 000000BD (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   USART_transmit
           LOCAL                   ADDRESS         
           =====                   =======         
           USART_transmit::i       000000BC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000E0 - 000000E7 (0x8 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USART_Receive           000000E0        main (main)

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 7.4\avr\LIB\CLIB\cl3s-ec_mul-sf.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000000E8 - 000000ED (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  000000EA 
           ?C_EXIT                 000000EA 
           ?C_FUNCALL              000000E8 
           _exit                   000000E8        ?cstartup_call_main (?C_STARTUP)
           exit                    000000E8        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (0x4 bytes), align: 1
  Segment part 0. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000000EE, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         000000EE        Absolute parts (?ABS_ENTRY_MOD)
           ?C_STARTUP              000000EE        ?RESET (?RESET)
           __RESTART               000000EE 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000EE - 000000F9 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000FA - 000000FD (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    000000FA 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000FE - 00000105 (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      000000FE        ?<Segment init: NEAR_I> (main)
                                                   ?<Segment init: NEAR_Z> (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000106 - 00000111 (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     00000106 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG_L07

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000112 - 00000127 (0x16 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_SRAM_16_L07    00000112        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000128 - 00000129 (0x2 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE3_L09          00000128        main (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000012A - 0000012B (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?PROLOGUE3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          0000012A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000012C - 0000012D (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          0000012C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000012E - 0000012F (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000130 - 00000133 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00000130        ?call_low_level_init (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000134 - 0000013F (0xc bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                00000134 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000140 - 0000014B (0xc bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              00000140 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000014C - 0000017F (0x34 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          0000014C        ?need_segment_init (?C_STARTUP)
               calls direct

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (0x4 bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 00000004 - 00000053 (0x50 bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000003           4   com    1
?FILL1               CODE          00000004 - 00000053          50   rel    0
CODE                 CODE          00000054 - 0000017F         12C   rel    1
INITTAB              CODE          00000180 - 0000018B           C   rel    0
NEAR_ID              CODE          0000018C - 00000198           D   rel    0
ABSOLUTE             DATA               0000001C                     rel    0
                     DATA               0000001D                   
                     DATA               0000001E                   
                     DATA               0000001F                   
                     DATA          00000029 - 0000002C           4 
                     DATA          00000031 - 00000031           1 
                     DATA          00000040 - 00000040           1 
CSTACK               DATA          00000060 - 0000007F          20   dse    0
RSTACK               DATA          00000080 - 0000009F          20   dse    0
NEAR_I               DATA          000000A0 - 000000AC           D   rel    0
NEAR_Z               DATA          000000AD - 000000BD          11   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 329 bytes of CODE memory (+            80 range fill )
  94 bytes of DATA memory (+ 6 absolute )

Errors: none
Warnings: none

